System.register(["jimu-core","jimu-ui","calcite-components"],(function(e,t){var n={},a={},i={};return{setters:[function(e){n.DataSourceComponent=e.DataSourceComponent,n.DataSourceManager=e.DataSourceManager,n.React=e.React,n.jsx=e.jsx},function(e){a.Button=e.Button},function(e){i.CalciteSlider=e.CalciteSlider}],execute:function(){e((()=>{var e={145:e=>{"use strict";e.exports=i},891:e=>{"use strict";e.exports=n},726:e=>{"use strict";e.exports=a}},t={};function s(n){var a=t[n];if(void 0!==a)return a.exports;var i=t[n]={exports:{}};return e[n](i,i.exports,s),i.exports}s.d=(e,t)=>{for(var n in t)s.o(t,n)&&!s.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},s.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),s.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.p="";var r={};return s.p=window.jimuConfig.baseUrl,(()=>{"use strict";s.r(r),s.d(r,{__set_webpack_public_path__:()=>u,default:()=>o});var e=s(891),t=s(726),n=s(145);const{useState:a,useEffect:i,useMemo:l}=e.React,o=s=>{const{id:r,config:o,useMapWidgetIds:u,useDataSources:c}=s,d=l((()=>e.DataSourceManager.getInstance()),[]),[g,p]=a(!1),[x,m]=a(null);i((()=>(c&&1===c.length&&c[0].fields&&c[0].fields.length>0&&p(!0),()=>{p(!1)})),[c]),i((()=>{if(g){const e=o.fields.reduce(((e,t)=>Object.assign(Object.assign({},e),{[t.name]:t.min})),{});m(e)}return()=>{m(null)}}),[g,o]);const f=e=>t=>{((e,t)=>{const n=o.fields.reduce(((n,a)=>Object.assign(Object.assign({},n),{[a.name]:a.name===e?t:x[a.name]})),{}),a=d.getDataSource(c[0].dataSourceId),i={where:o.fields.reduce(((e,t,a)=>0===a?e:e.concat(" ",o.logicOp," ",t.name," >= ",n[t.name].toString())),o.fields[0].name.concat(" >= ",n[o.fields[0].name].toString()))};a.updateQueryParams(i,u[0]),m(n)})(e,+t.target.value)};return g?(0,e.jsx)("div",{style:{width:"100%",height:"100%",maxHeight:"800px",overflow:"auto"}},(0,e.jsx)("div",{style:{textAlign:"center",paddingLeft:"5px",paddingRight:"5px"}},(0,e.jsx)("h3",null,"Slider Filter"),(0,e.jsx)("div",null,"Set the value for each filter field using the slider.")),(0,e.jsx)("div",{style:{paddingTop:"10px"}},(0,e.jsx)(e.DataSourceComponent,{useDataSource:c[0],widgetId:r},o.fields.map((t=>(0,e.jsx)("div",null,(0,e.jsx)("div",{style:{textAlign:"left",paddingLeft:"5px"}},(0,e.jsx)("h5",null,t.label)),(0,e.jsx)(n.CalciteSlider,{value:x?x[t.name]:t.min,onCalciteSliderChange:f(t.name),min:t.min,max:t.max,step:(t.max-t.min)/100}),(0,e.jsx)("div",{style:{textAlign:"right",paddingRight:"5px",display:"flex",flexDirection:"row-reverse"}},(0,e.jsx)("span",null,(0,e.jsx)("input",{style:{flex:"1 0 30px",textAlign:"right"},value:x?x[t.name]:t.min,onChange:f(t.name)})),(0,e.jsx)("span",null,"Minimum: "))))),(0,e.jsx)(t.Button,{style:{width:"100%"},title:"reset-button",disabled:!g,onClick:()=>{const e=o.fields.reduce(((e,t)=>Object.assign(Object.assign({},e),{[t.name]:t.min})),{});d.getDataSource(c[0].dataSourceId).updateQueryParams({where:""},u[0]),m(e)}},"Reset")))):(0,e.jsx)("h3",null,"Please configure the data source and select fields.")};function u(e){s.p=e}})(),r})())}}}));